{"version":3,"file":"static/js/2073.84c9f824.chunk.js","mappings":"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","sources":["webpack://front/./src/Components/Profile/Settings/Settings.module.css?7fe4","Components/Profile/Settings/Settings.jsx","Hooks/useProfileMenu.js","webpack://front/./src/Components/UI/ProfileLayout/ProfileLayout.module.css?1eb2","webpack://front/./src/Components/UI/ProfileLayout/ProfileMobileMenu/ProfileMobileMenu.module.css?20a0","Components/UI/ProfileLayout/ProfileMobileMenu/ProfileMobileMenu.jsx","Components/UI/ProfileLayout/ProfileLayout.jsx","webpack://front/./src/Components/UI/ServerResponse/ServerResponse.module.css?224e","Components/UI/ServerResponse/ServerResponse.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"main\":\"Settings_main__my6j7\",\"field\":\"Settings_field__3nRk8\",\"submitBut\":\"Settings_submitBut__zFcaU\",\"container\":\"Settings_container__gUfaY\"};","import { Button } from '@mui/material'\nimport React, { useEffect } from 'react'\nimport { Controller, useForm } from 'react-hook-form'\nimport { useTranslation } from 'react-i18next'\nimport { connect } from 'react-redux'\nimport { setServerError } from '../../../Redux/commonReducer'\nimport { changePassword } from '../../../Redux/userReducer'\nimport AnimatedBlock from '../../Animation/AnimatedBlock/AnimatedBlock'\nimport Preloader from '../../Common/Preloader/Preloader'\nimport Error from '../../UI/Form/Error/Error'\nimport Field from '../../UI/Form/Field/Field'\nimport InputPassword from '../../UI/Form/InputPassword'\nimport ProfileLayout from '../../UI/ProfileLayout/ProfileLayout'\nimport ServerResponse from '../../UI/ServerResponse/ServerResponse'\nimport classes from './Settings.module.css'\n\nconst Settings = (props) => {\n    const { \n        changePassword, \n        user,\n        serverError,\n        setServerError,\n        isFetching,\n        serverResponse\n    } = props\n\n    const { t } = useTranslation()\n\n    const { handleSubmit, control, watch, reset } = useForm()\n\n    const onSubmit = (data) => {\n        changePassword(user._id, data)\n    }\n\n    useEffect(() => {\n        if(serverResponse) {\n            reset({\n                old_password: \"\",\n                new_password: \"\",\n                match_password: \"\"\n            })\n        }\n    }, [serverResponse])\n\n    return (\n        <ProfileLayout title={t(\"profile.menu.settings\")}>\n            {isFetching && <Preloader/>}\n            {serverResponse && <ServerResponse/>}\n            <AnimatedBlock className={classes.container}>\n\n                <form onSubmit={handleSubmit(onSubmit)} className={classes.main}>\n                    <Field className={classes.field}>\n                        <label>{t(\"profile.settings.old_password\")}</label>\n                        <Controller\n                            name=\"old_password\"\n                            control={control}\n                            rules={{ \n                                required: {\n                                    value: true,\n                                    message: t(\"errors.required\")\n                                }\n                            }}\n                            defaultValue=\"\"\n                            render={({ field: { onChange, value }, fieldState: { error } }) => (\n                                <InputPassword\n                                    error={error}\n                                    onChange={(e) => {\n                                        setServerError(null)\n                                        onChange(e.target.value)\n                                    }}\n                                    value={value}  \n                                    label={null}\n                                />\n                            )}\n                        />\n                    </Field>\n                    {serverError && <Error text={serverError}/>}\n                    <Field className={classes.field}>\n                        <label>{t(\"profile.settings.new_password\")}</label>\n                        <Controller\n                            name=\"new_password\"\n                            control={control}\n                            defaultValue=\"\"\n                            rules={{ \n                                required: {\n                                    value: true,\n                                    message: t(\"errors.required\")\n                                }\n                            }}\n                            render={({ field: { onChange, value }, fieldState: { error } }) => (\n                                <InputPassword\n                                    error={error}\n                                    onChange={onChange}\n                                    value={value}  \n                                    label={null}\n                                />\n                            )}\n                        />\n                    </Field>\n                    <Field className={classes.field}>\n                        <label>{t(\"profile.settings.match_password\")}</label>\n                        <Controller\n                            name=\"match_password\"\n                            control={control}\n                            rules={{ \n                                required: {\n                                    value: true,\n                                    message: t(\"errors.required\")\n                                },\n                                validate: {\n                                    value: (value) => value === watch('new_password') || t(\"errors.notMatch\")\n                                }\n                            }}\n                            defaultValue=\"\"\n                            render={({ field: { onChange, value }, fieldState: { error } }) => (\n                                <InputPassword\n                                    error={error}\n                                    onChange={onChange}\n                                    value={value}  \n                                    label={null}\n                                />\n                            )}\n                        />\n                    </Field>\n                    <Button \n                        className={classes.submitBut} \n                        type=\"submit\"\n                    >\n                        {t(\"profile.settings.submit\")}\n                    </Button>\n                </form>\n            </AnimatedBlock>\n        </ProfileLayout>\n    )\n}\n\nlet mapStateToProps = (state) => ({\n    user: state.user.user,\n    serverError: state.common.serverError,\n    isFetching: state.common.isFetching,\n    serverResponse: state.common.serverResponse\n})\n\nexport default connect(mapStateToProps, {\n    changePassword,\n    setServerError\n})(Settings)","import { useTranslation } from \"react-i18next\"\n\nexport const useProfileMenu = () => {\n    const { t } = useTranslation()\n\n    const items = [\n        {\n            href: \"/profile\",\n            text: t(\"profile.menu.account\")\n        },\n        {\n            href: \"/profile/liked_items\",\n            text: t(\"profile.menu.liked\")\n        },\n        {\n            href: \"/profile/my_orders\",\n            text: t(\"profile.menu.orders\")\n        },\n        {\n            href: \"/profile/viewed_items\",\n            text: t(\"profile.menu.viewed\")\n        },\n        {\n            href: \"/profile/settings\",\n            text: t(\"profile.menu.settings\")\n        }\n    ]\n\n    return items\n}","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"ProfileLayout_main__SXx6s\",\"container\":\"ProfileLayout_container__0DoeD\",\"menu\":\"ProfileLayout_menu__azYNe\",\"active\":\"ProfileLayout_active__HAHdm\",\"header\":\"ProfileLayout_header__KN308\",\"exit\":\"ProfileLayout_exit__tp7VK\",\"content\":\"ProfileLayout_content__OJbal\",\"mobileMenu\":\"ProfileLayout_mobileMenu__32o0X\"};","// extracted by mini-css-extract-plugin\nexport default {\"menuButt\":\"ProfileMobileMenu_menuButt__uY96a\",\"paper\":\"ProfileMobileMenu_paper__67Nan\",\"header\":\"ProfileMobileMenu_header__9dgc0\",\"links\":\"ProfileMobileMenu_links__q6Y4j\",\"active\":\"ProfileMobileMenu_active__Q+5BF\",\"divider\":\"ProfileMobileMenu_divider__u1Rva\",\"exit\":\"ProfileMobileMenu_exit__wPPEh\"};","import { Button } from '@mui/material'\nimport React from 'react'\nimport classes from './ProfileMobileMenu.module.css'\nimport { RiMenuFoldFill } from \"react-icons/ri\"\nimport { Drawer } from '@mui/material'\nimport { useState } from 'react'\nimport { IconButton } from '@mui/material'\nimport { AiOutlineClose } from \"react-icons/ai\"\nimport { useProfileMenu } from '../../../../Hooks/useProfileMenu'\nimport { NavLink } from 'react-router-dom'\nimport { useTranslation } from 'react-i18next'\nimport { Divider } from '@mui/material'\n\nconst ProfileMobileMenu = (props) => {\n    const { logout, user } = props\n\n    const { t } = useTranslation()\n\n    const [isOpen, setIsOpen] = useState(false)\n\n    const handleOpen = () => {\n        setIsOpen(!isOpen)\n    }\n\n    const anchor = 'right'\n\n    const menuItems = useProfileMenu()\n\n    return (\n        <div>\n            <Button onClick={handleOpen} className={classes.menuButt}>\n                <span>Меню</span>\n                <RiMenuFoldFill/>\n            </Button>\n            <Drawer\n                anchor={anchor} \n                open={isOpen} \n                onClose={handleOpen}\n                classes={{ root: classes.root, paper: classes.paper }}\n            >\n                <div className={classes.header}>\n                    <IconButton \n                        onClick={handleOpen}\n                        className={classes.closeBut}\n                    >\n                        <AiOutlineClose/>\n                    </IconButton>\n                </div>\n                <div className={classes.links}>\n                    {menuItems.map(el => (\n                        <NavLink \n                            key={el.href}\n                            className={({isActive}) => (isActive ? classes.active : '')} \n                            to={el.href}\n                            end\n                        >\n                            {el.text}\n                        </NavLink>\n                    ))}\n                    {user && user.adminLevel > 0 && (\n                        <NavLink \n                            className={({isActive}) => (isActive ? classes.active : '')} \n                            to={'/admin'}\n                            end\n                            target={\"_blank\"}\n                        >\n                            Адмін. Панель\n                        </NavLink>\n                    )}\n                    <Divider className={classes.divider}/>\n                    <Button className={classes.exit} onClick={() => logout()}>{t(\"auth.logout\")}</Button>\n                </div>\n            </Drawer>\n        </div>\n    )\n}\n\nexport default ProfileMobileMenu","import { Button } from '@mui/material'\nimport React from 'react'\nimport { Helmet } from 'react-helmet'\nimport { useTranslation } from 'react-i18next'\nimport { connect } from 'react-redux'\nimport { NavLink } from 'react-router-dom'\nimport { useProfileMenu } from '../../../Hooks/useProfileMenu'\nimport { logout } from '../../../Redux/userReducer'\nimport AnimatedBlock from '../../Animation/AnimatedBlock/AnimatedBlock'\nimport MaxWidthContainer from '../Container/MaxWidthContainer/MaxWidthContainer'\nimport PaddingContainer from '../Container/PaddingContainer/PaddingContainer'\nimport classes from './ProfileLayout.module.css'\nimport ProfileMobileMenu from './ProfileMobileMenu/ProfileMobileMenu'\n\nconst ProfileLayout = (props) => {\n    const { children, title, logout, user } = props\n\n    const { t } = useTranslation()\n\n    const menuItems = useProfileMenu()\n\n    return (\n        <PaddingContainer className={classes.main}>\n            <Helmet \n                htmlAttributes={{\"lang\": \"ua\", \"amp\": undefined}}\n                title={`${t(\"siteName\")} | ${t(\"profile.menu.account\")}`}\n                meta={[{\"name\": \"description\", \"content\": t(\"siteDescription\")}]}\n            />\n            <MaxWidthContainer className={classes.container}>\n                <AnimatedBlock \n                    className={classes.menu}\n                    initial={{opacity: 0, x: -50 }}\n                    animate={{ opacity: 1, x: 0 }}\n                    exit={{ opacity: 0, x: -50 }}\n                    duration={.3}\n                >\n                    {menuItems.map(el => (\n                        <NavLink \n                            key={el.href}\n                            className={({isActive}) => (isActive ? classes.active : '')} \n                            to={el.href}\n                            end\n                        >\n                            {el.text}\n                        </NavLink>\n                    ))}\n                    {user && user.adminLevel > 0 && (\n                         <NavLink \n                            className={({isActive}) => (isActive ? classes.active : '')} \n                            to={'/admin'}\n                            end\n                            target={\"_blank\"}\n                        >\n                            Адмін. Панель\n                        </NavLink>\n                    )}\n                </AnimatedBlock>\n                <div className={classes.content}>\n                    <div className={classes.header}>\n                        <h4>{title}</h4>\n                        <Button className={classes.exit} onClick={() => logout()}>{t(\"auth.logout\")}</Button>\n                        <div className={classes.mobileMenu}>\n                            <ProfileMobileMenu logout={logout} user={user}/>\n                        </div>\n                    </div>\n                    {children}\n                </div>\n            </MaxWidthContainer>\n        </PaddingContainer>\n    )\n}\n\nlet mapStateToProps = (state) => ({\n    user: state.user.user\n})\n\nexport default connect(mapStateToProps, {\n    logout\n})(ProfileLayout)","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"ServerResponse_main__uVUyS\",\"fade\":\"ServerResponse_fade__xbMji\",\"head\":\"ServerResponse_head__b1YVa\",\"error\":\"ServerResponse_error__S72kH\",\"good\":\"ServerResponse_good__Y6wpx\"};","import React, { useEffect } from 'react'\nimport classes from './ServerResponse.module.css'\nimport { IconButton } from '@mui/material'\nimport { AiOutlineClose } from 'react-icons/ai';\nimport { connect } from 'react-redux';\nimport { setServerError, setServerResponse } from '../../../Redux/commonReducer';\nimport { cx } from '../../../Utils/classnames';\n\nimport Aos from 'aos'\nimport 'aos/dist/aos.css'\n\nconst ServerResponse = (props) => {\n    const {\n        setServerError,\n        setServerResponse,\n        serverError,\n        serverResponse\n    } = props\n\n    const handleServerError = () => {\n        setServerError(null)\n    }\n    const handleServerResponse = () => {\n        setServerResponse(null)\n    }\n\n    const onClose = () => {\n        handleServerError()\n        handleServerResponse()\n    }\n\n    useEffect(() => {\n        const timer = setTimeout(() => {\n            onClose()\n        }, 3000);\n        return () => clearTimeout(timer);\n    }, [])\n\n    useEffect(() => {\n        Aos.init({duration: 1000})\n    }, [])\n\n    return (\n        <div \n            className={cx(\n                classes.main, \n                serverError ? classes.error : \"\", \n                serverResponse ? classes.good : \"\"\n            )}\n        >\n            <div className={classes.head}>\n                <IconButton onClick={onClose}>\n                    <AiOutlineClose/>\n                </IconButton>\n            </div>\n            <div className={classes.body}>\n                {serverResponse && <p>{serverResponse}</p>}\n                {serverError && <p>{serverError}</p>}\n            </div>\n        </div>\n    )\n}\n\nlet mapStateToProps = (state) => ({\n    serverResponse: state.common.serverResponse,\n    serverError: state.common.serverError\n})\n\nexport default connect(mapStateToProps, {\n    setServerError,\n    setServerResponse\n})(ServerResponse)"],"names":["connect","state","user","serverError","common","isFetching","serverResponse","changePassword","setServerError","props","t","useTranslation","useForm","handleSubmit","control","watch","reset","useEffect","old_password","new_password","match_password","ProfileLayout","title","Preloader","ServerResponse","AnimatedBlock","className","classes","onSubmit","data","_id","Field","name","rules","required","value","message","defaultValue","render","field","onChange","error","fieldState","InputPassword","e","target","label","Error","text","validate","Button","type","useProfileMenu","href","logout","useState","isOpen","setIsOpen","handleOpen","menuItems","onClick","Drawer","anchor","open","onClose","root","paper","IconButton","map","el","isActive","to","end","adminLevel","Divider","children","PaddingContainer","Helmet","htmlAttributes","undefined","meta","MaxWidthContainer","initial","opacity","x","animate","exit","duration","setServerResponse","timer","setTimeout","clearTimeout","Aos","cx"],"sourceRoot":""}