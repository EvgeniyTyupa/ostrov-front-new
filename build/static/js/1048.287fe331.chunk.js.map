{"version":3,"file":"static/js/1048.287fe331.chunk.js","mappings":"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","sources":["Components/Admin/Items/AdminAddForm.jsx","Components/Admin/Items/AdminEditForm.jsx","webpack://front/./src/Components/Admin/Items/MultipleChangeModal/MultipleChangeModal.module.css?3912","Components/Admin/Items/MultipleChangeModal/MultipleChangeModal.jsx","webpack://front/./src/Components/Admin/Items/EmptyDescriptionItemsModal/EmptyDescriptionItemsModal.module.css?8855","Components/Admin/Items/EmptyDescriptionItemsModal/EmptyDescriptionItemsModal.jsx","webpack://front/./src/Components/Admin/Items/ChooseCategoryForXmlModal/ChooseCategoryForXmlModal.module.css?677e","Components/Admin/Items/ChooseCategoryForXmlModal/ChooseCategoryForXmlModal.jsx","Components/Admin/Items/AdminItems.jsx","Components/Admin/Items/AdminItemsContainer.jsx","Components/UI/Form/Autocomplete.jsx","Components/UI/Form/Checkbox.jsx","Components/UI/Form/Select.jsx","webpack://front/./src/Components/UI/ServerResponse/ServerResponse.module.css?224e","Components/UI/ServerResponse/ServerResponse.jsx","Hooks/useChildAge.js"],"sourcesContent":["import React, { useEffect } from 'react'\nimport classes from '../../UI/Form/AdminForm.module.css'\nimport { Controller, useForm } from 'react-hook-form'\nimport AdminInput from '../../UI/Form/AdminInput'\nimport Field from '../../UI/Form/Field/Field'\nimport Modal from '../../UI/Modal/Modal'\nimport { FaBarcode, FaCode, FaDollarSign } from 'react-icons/fa';\nimport { GrStorage } from 'react-icons/gr';\nimport { GiWeight } from 'react-icons/gi';\nimport { BsYoutube } from 'react-icons/bs';\nimport CustomAutocomplete from '../../UI/Form/Autocomplete'\nimport { Button, MenuItem } from '@mui/material'\nimport CustomSelect from '../../UI/Form/Select'\nimport { GENDERS } from '../../../Utils/constants'\nimport DropZone from '../../Common/DropZone/DropZone'\nimport { useChildAge } from '../../../Hooks/useChildAge'\n\nconst AdminAddForm = (props) => {\n    const { onClose, brands, categories, tags, createItem } = props\n\n    const { handleSubmit, control, reset, setValue } = useForm()\n\n    const ages = useChildAge()\n\n    const onSubmit = (data) => {\n        data.brand = data.brand._id\n        data.category = data.category._id\n        data.tags = data.tags.map(item => item._id)\n\n        console.log(data)\n\n        createItem(data)\n\n        // reset({\n        //     name: \"\",\n        //     name_ua: \"\",\n        //     articule: \"\",\n        //     code: \"\",\n        //     price: \"\",\n        //     cost_price: \"\",\n        //     description: \"\",\n        //     description_ua: \"\",\n        //     images: [],\n        //     video_link: \"\",\n        //     brand: null,\n        //     country: \"\",\n        //     country_ua: \"\",\n        //     min_age: \"\",\n        //     max_age: \"\",\n        //     gender: \"\",\n        //     material: \"\",\n        //     material_ua: \"\",\n        //     size: \"\",\n        //     count: \"\",\n        //     category: null,\n        //     tags: []\n        // })\n    }\n\n    return (\n        <Modal title={\"Новый товар\"} onClose={onClose}>\n            <form className={classes.main} onSubmit={handleSubmit(onSubmit)}>\n                <Field className={classes.row}>\n                    <Field>\n                        <Controller\n                            name=\"name_ua\"\n                            control={control}\n                            defaultValue=\"\"\n                            rules={{ \n                                required: {\n                                    value: true,\n                                    message: \"Обязательное поле!\"\n                                },\n                                pattern: {\n                                    value: /^[а-яієїґА-ЯІЄЇҐa-zA-Z0-9!:;'\"@#$№%&*)(.,_ \\^]+$/,\n                                    message: \"Нельзя использовать эти символы в названии товара <,>,?,~,/,+,-,=\"\n                                }\n                            }}\n                            render={({ field: { onChange, value }, fieldState: { error } }) => (\n                                <AdminInput\n                                    onChange={onChange}\n                                    value={value}\n                                    error={error}\n                                    label=\"Название УКР\"  \n                                />\n                            )}\n                        />\n                    </Field>\n                </Field>\n                <Field className={classes.row}>\n                    <Field>\n                        <Controller\n                            name=\"articule\"\n                            control={control}\n                            defaultValue=\"\"\n                            rules={{ required: \"Обязательное поле!\" }}\n                            render={({ field: { onChange, value }, fieldState: { error } }) => (\n                                <AdminInput\n                                    onChange={onChange}\n                                    value={value}\n                                    error={error}\n                                    label=\"Артикул\"  \n                                    startAdornment={true}\n                                    startAdornmentIcon={<FaCode/>}\n                                />\n                            )}\n                        />\n                    </Field>\n                    <Field>\n                        <Controller\n                            name=\"code\"\n                            control={control}\n                            defaultValue=\"\"\n                            rules={{ required: \"Обязательное поле!\" }}\n                            render={({ field: { onChange, value }, fieldState: { error } }) => (\n                                <AdminInput\n                                    onChange={onChange}\n                                    value={value}\n                                    error={error}\n                                    label=\"Код\"  \n                                    startAdornment={true}\n                                    startAdornmentIcon={<FaBarcode/>}\n                                />\n                            )}\n                        />\n                    </Field>\n                </Field>\n                <Field className={classes.row}>\n                    <Field>\n                        <Controller\n                            name=\"price\"\n                            control={control}\n                            defaultValue=\"\"\n                            rules={{ required: \"Обязательное поле!\" }}\n                            render={({ field: { onChange, value }, fieldState: { error } }) => (\n                                <AdminInput\n                                    onChange={onChange}\n                                    value={value}\n                                    error={error}\n                                    label=\"Цена\"  \n                                    regex=\"number\"\n                                    startAdornment={true}\n                                    startAdornmentIcon={<FaDollarSign/>}\n                                />\n                            )}\n                        />\n                    </Field>\n                    <Field>\n                        <Controller\n                            name=\"cost_price\"\n                            control={control}\n                            defaultValue=\"\"\n                            render={({ field: { onChange, value }, fieldState: { error } }) => (\n                                <AdminInput\n                                    onChange={onChange}\n                                    value={value}\n                                    label=\"Себестоимость\"  \n                                    regex=\"number\"\n                                    startAdornment={true}\n                                    startAdornmentIcon={<FaDollarSign/>}\n                                />\n                            )}\n                        />\n                    </Field>\n                </Field>\n                <Field>\n                    <Controller\n                        name=\"description_ua\"\n                        control={control}\n                        defaultValue=\"\"\n                        render={({ field: { onChange, value }, fieldState: { error } }) => (\n                            <AdminInput\n                                onChange={onChange}\n                                value={value}\n                                label=\"Описание УКР\"\n                                multiline={true}\n                                rows={6}\n                            />\n                        )}\n                    />\n                </Field>\n                <div>\n                    <Controller\n                        name=\"images\"\n                        control={control}\n                        rules={{ required: \"Обязательное поле!\" }}\n                        defaultValue=\"\"\n                        render={({ field: { onChange, value }, fieldState: { error } }) => (\n                            <>\n                                <DropZone\n                                    onChange={onChange}\n                                    multiple\n                                    initialFiles={value}\n                                    error={error}\n                                />\n                            </>\n                        )}\n                    />\n                </div>\n                <Field>\n                    <Controller\n                        name=\"video_link\"\n                        control={control}\n                        defaultValue=\"\"\n                        render={({ field: { onChange, value }, fieldState: { error } }) => (\n                            <AdminInput\n                                onChange={onChange}\n                                value={value}\n                                label=\"Видео Youtube\"\n                                placeholder=\"https://www.youtube.com/embed/vO7pqwo5hA4\"\n                                startAdornment={true}\n                                startAdornmentIcon={<BsYoutube/>}\n                            />\n                        )}\n                    />\n                </Field>\n                <Controller\n                    name=\"brand\"\n                    control={control}\n                    defaultValue={null}\n                    render={({ field: { onChange, value }, fieldState: { error } }) => (\n                        <CustomAutocomplete\n                            value={value}\n                            onChange={onChange}\n                            items={brands}\n                            label=\"Бренд\"\n                            setValue={setValue}\n                            name={\"brand\"}\n                        />\n                    )}\n                />\n                <Field className={classes.row}>\n                    <Field>\n                        <Controller\n                            name=\"country_ua\"\n                            control={control}\n                            defaultValue=\"\"\n                            render={({ field: { onChange, value }, fieldState: { error } }) => (\n                                <AdminInput\n                                    onChange={onChange}\n                                    value={value}\n                                    label=\"Страна производитель УКР\"  \n                                />\n                            )}\n                        />\n                    </Field>\n                </Field>\n                <Field className={classes.row}>\n                    <Controller\n                        name=\"gender\"\n                        control={control}\n                        rules={{ required: \"Обязательное поле!\" }}\n                        defaultValue=\"\"\n                        render={({ field: { onChange, value }, fieldState: { error } }) => (\n                            <CustomSelect\n                                onChange={onChange}\n                                value={value}\n                                label=\"Пол\"  \n                                error={error}\n                            >\n                                {GENDERS.map(item => <MenuItem value={item.value} key={item.value}>{item.text}</MenuItem>)}\n                            </CustomSelect>\n                        )}\n                    />\n                    <Controller\n                        name=\"max_age\"\n                        control={control}\n                        defaultValue=\"\"\n                        rules={{ required: \"Обязательное поле!\" }}\n                        render={({ field: { onChange, value }, fieldState: { error } }) => (\n                            <CustomSelect\n                                onChange={(e) => {\n                                    const newValue = Number(e.target.value)\n                                    setValue('max_age', newValue)\n                                    ages.forEach(el => {\n                                        if(el.value[1] === newValue) {\n                                            setValue('min_age', el.value[0])\n                                        }\n                                    })\n                                }}\n                                value={value}\n                                label=\"Подходит по возрасту\"  \n                                error={error}\n                            >\n                                {ages.map(el => \n                                    el.value[1] > -1 && <MenuItem key={el.text} value={el.value[1]}>{el.text}</MenuItem>\n                                )}\n                            </CustomSelect>\n                        )}\n                    />\n                </Field>\n                <Field className={classes.row}>\n                    <Controller\n                        name=\"material_ua\"\n                        control={control}\n                        defaultValue=\"\"\n                        render={({ field: { onChange, value }, fieldState: { error } }) => (\n                            <AdminInput\n                                onChange={onChange}\n                                value={value}\n                                error={error}\n                                label=\"Материал УКР\"\n                            />\n                        )}\n                    />\n                </Field>\n                <Field className={classes.row}>\n                    <Controller\n                        name=\"size\"\n                        control={control}\n                        defaultValue=\"\"\n                        render={({ field: { onChange, value }, fieldState: { error } }) => (\n                            <AdminInput\n                                onChange={onChange}\n                                value={value}\n                                label=\"Размер (шир. x выс. см)\"\n                                startAdornment={true}\n                                startAdornmentIcon={<GiWeight/>}\n                            />\n                        )}\n                    />\n                    <Controller\n                        name=\"count\"\n                        control={control}\n                        defaultValue=\"\"\n                        rules={{ required: \"Обязательное поле!\" }}\n                        render={({ field: { onChange, value }, fieldState: { error } }) => (\n                            <AdminInput\n                                onChange={onChange}\n                                value={value}\n                                error={error}\n                                regex=\"number\"\n                                label=\"Кол-во на складе\"\n                                startAdornment={true}\n                                startAdornmentIcon={<GrStorage/>}\n                            />\n                        )}\n                    />\n                </Field>\n                <div style={{ marginTop: \"10px\" }}>\n                    <Controller\n                        name=\"category\"\n                        control={control}\n                        defaultValue={null}\n                        rules={{ required: \"Обязательное поле!\" }}\n                        render={({ field: { onChange, value }, fieldState: { error } }) => (\n                            <CustomAutocomplete\n                                value={value}\n                                onChange={onChange}\n                                items={categories}\n                                label=\"Категория\"\n                                error={error}\n                                setValue={setValue}\n                                name={\"category\"}\n                            />\n                        )}\n                    />\n                </div>\n                <div style={{ marginTop: \"20px\" }}>\n                    <Controller\n                        name=\"tags\"\n                        control={control}\n                        defaultValue={[]}\n                        rules={{ required: \"Обязательное поле!\" }}\n                        render={({ field: { onChange, value }, fieldState: { error } }) => (\n                            <CustomAutocomplete\n                                value={value}\n                                onChange={onChange}\n                                items={tags}\n                                multiple={true}\n                                label=\"Теги\"\n                                error={error}\n                                setValue={setValue}\n                                name={\"tags\"}\n                            />\n                        )}\n                    />\n                </div>\n                <Button className={classes.submit} type='submit'>Добавить</Button>\n            </form>\n        </Modal>\n    )\n}\n\nexport default AdminAddForm","import React from 'react'\nimport classes from '../../UI/Form/AdminForm.module.css'\nimport { Controller, useForm } from 'react-hook-form'\nimport AdminInput from '../../UI/Form/AdminInput'\nimport Field from '../../UI/Form/Field/Field'\nimport Modal from '../../UI/Modal/Modal'\nimport { FaBarcode, FaCode, FaDollarSign } from 'react-icons/fa';\nimport { GrStorage } from 'react-icons/gr';\nimport { GiWeight } from 'react-icons/gi';\nimport { BsYoutube } from 'react-icons/bs';\nimport CustomAutocomplete from '../../UI/Form/Autocomplete'\nimport { Button, MenuItem } from '@mui/material'\nimport CustomSelect from '../../UI/Form/Select'\nimport { GENDERS } from '../../../Utils/constants'\nimport { useEffect } from 'react'\nimport DropZone from '../../Common/DropZone/DropZone'\nimport { useChildAge } from '../../../Hooks/useChildAge'\n\n\nconst AdminEditForm = (props) => {\n    const { item, brands, categories, tags, onClose, editItem } = props\n\n    const { handleSubmit, control, reset, setValue } = useForm()\n\n    const ages = useChildAge()\n\n    useEffect(() => {\n        reset({\n            name_ua: item.name_ua || \"\",\n            articule: item.articule || \"\",\n            code: item.code || \"\",\n            price: item.price || \"\",\n            cost_price: item.cost_price || \"\",\n            description_ua: item.description_ua || \"\",\n            images: item.images || [],\n            video_link: item.video_link || \"\",\n            brand: item.brand || \"\",\n            country: item.country || \"\",\n            country_ua: item.country_ua || \"\",\n            min_age: item.min_age || \"\",\n            max_age: item.max_age || \"\",\n            gender: item.gender || \"\",\n            material: item.material || \"\",\n            material_ua: item.material_ua || \"\",\n            size: item.size || \"\",\n            count: item.count || \"\",\n            category: item.category || \"\",\n            tags: item.tags || []\n        })\n    }, [])\n\n    const onSubmit = (data) => {\n        data.brand = data.brand._id\n        data.category = data.category._id\n        data.tags = data.tags.map(item => item._id)\n\n        editItem(item._id, data)\n    }\n\n    const handleClose = () => {\n        onClose(null)\n    }\n\n    return (\n        <Modal title={`Редактировать ${item.name_ua}`} onClose={handleClose}>\n            <form className={classes.main} onSubmit={handleSubmit(onSubmit)}>\n                <Field className={classes.row}>\n                    <Field>\n                        <Controller\n                            name=\"name_ua\"\n                            control={control}\n                            defaultValue=\"\"\n                            rules={{ \n                                required: {\n                                    value: true,\n                                    message: \"Обязательное поле!\"\n                                },\n                                pattern: {\n                                    value: /^[а-яієїґА-ЯІЄЇҐa-zA-Z0-9!:;'\"@#$№%&*)(.,_ \\^]+$/,\n                                    message: \"Нельзя использовать эти символы в названии товара <,>,?,~,/,+,-,=\"\n                                }\n                            }}\n                            render={({ field: { onChange, value }, fieldState: { error } }) => (\n                                <AdminInput\n                                    onChange={onChange}\n                                    value={value}\n                                    error={error}\n                                    label=\"Название УКР\"  \n                                />\n                            )}\n                        />\n                    </Field>\n                </Field>\n                <Field className={classes.row}>\n                    <Field>\n                        <Controller\n                            name=\"articule\"\n                            control={control}\n                            defaultValue=\"\"\n                            rules={{ required: \"Обязательное поле!\" }}\n                            render={({ field: { onChange, value }, fieldState: { error } }) => (\n                                <AdminInput\n                                    onChange={onChange}\n                                    value={value}\n                                    error={error}\n                                    label=\"Артикул\"  \n                                    startAdornment={true}\n                                    startAdornmentIcon={<FaCode/>}\n                                />\n                            )}\n                        />\n                    </Field>\n                    <Field>\n                        <Controller\n                            name=\"code\"\n                            control={control}\n                            defaultValue=\"\"\n                            rules={{ required: \"Обязательное поле!\" }}\n                            render={({ field: { onChange, value }, fieldState: { error } }) => (\n                                <AdminInput\n                                    onChange={onChange}\n                                    value={value}\n                                    error={error}\n                                    label=\"Код\"  \n                                    startAdornment={true}\n                                    startAdornmentIcon={<FaBarcode/>}\n                                />\n                            )}\n                        />\n                    </Field>\n                </Field>\n                <Field className={classes.row}>\n                    <Field>\n                        <Controller\n                            name=\"price\"\n                            control={control}\n                            defaultValue=\"\"\n                            rules={{ required: \"Обязательное поле!\" }}\n                            render={({ field: { onChange, value }, fieldState: { error } }) => (\n                                <AdminInput\n                                    onChange={onChange}\n                                    value={value}\n                                    error={error}\n                                    label=\"Цена\"  \n                                    regex=\"number\"\n                                    startAdornment={true}\n                                    startAdornmentIcon={<FaDollarSign/>}\n                                />\n                            )}\n                        />\n                    </Field>\n                    <Field>\n                        <Controller\n                            name=\"cost_price\"\n                            control={control}\n                            defaultValue=\"\"\n                            render={({ field: { onChange, value }, fieldState: { error } }) => (\n                                <AdminInput\n                                    onChange={onChange}\n                                    value={value}\n                                    regex=\"number\"\n                                    label=\"Себестоимость\"  \n                                    startAdornment={true}\n                                    startAdornmentIcon={<FaDollarSign/>}\n                                />\n                            )}\n                        />\n                    </Field>\n                </Field>\n                <Field>\n                    <Controller\n                        name=\"description_ua\"\n                        control={control}\n                        defaultValue=\"\"\n                        render={({ field: { onChange, value }, fieldState: { error } }) => (\n                            <AdminInput\n                                onChange={onChange}\n                                value={value}\n                                label=\"Описание УКР\"\n                                multiline={true}\n                                rows={6}\n                            />\n                        )}\n                    />\n                </Field>\n                <div>\n                    <Controller\n                        name=\"images\"\n                        control={control}\n                        rules={{ required: \"Обязательное поле!\" }}\n                        defaultValue=\"\"\n                        render={({ field: { onChange, value }, fieldState: { error } }) => (\n                            <> \n                                <DropZone\n                                    onChange={onChange}\n                                    multiple\n                                    initialFiles={value}\n                                    error={error}\n                                />\n                            </>\n                        )}\n                    />\n                </div>\n                <Field>\n                    <Controller\n                        name=\"video_link\"\n                        control={control}\n                        defaultValue=\"\"\n                        render={({ field: { onChange, value }, fieldState: { error } }) => (\n                            <AdminInput\n                                onChange={onChange}\n                                value={value}\n                                label=\"Видео Youtube\"\n                                placeholder=\"https://www.youtube.com/embed/vO7pqwo5hA4\"\n                                startAdornment={true}\n                                startAdornmentIcon={<BsYoutube/>}\n                            />\n                        )}\n                    />\n                </Field>\n                <Controller\n                    name=\"brand\"\n                    control={control}\n                    defaultValue=\"\"\n                    render={({ field: { onChange, value }, fieldState: { error } }) => (\n                        <CustomAutocomplete\n                            value={value}\n                            onChange={onChange}\n                            items={brands}\n                            label=\"Бренд\"\n                            setValue={setValue}\n                            name={\"brand\"}\n                        />\n                    )}\n                />\n                <Field className={classes.row}>\n                    <Field>\n                        <Controller\n                            name=\"country_ua\"\n                            control={control}\n                            defaultValue=\"\"\n                            render={({ field: { onChange, value }, fieldState: { error } }) => (\n                                <AdminInput\n                                    onChange={onChange}\n                                    value={value}\n                                    label=\"Страна производитель УКР\"  \n                                />\n                            )}\n                        />\n                    </Field>\n                </Field>\n                <Field className={classes.row}>\n                    <Controller\n                        name=\"gender\"\n                        control={control}\n                        rules={{ required: \"Обязательное поле!\" }}\n                        defaultValue=\"\"\n                        render={({ field: { onChange, value }, fieldState: { error } }) => (\n                            <CustomSelect\n                                onChange={onChange}\n                                value={value}\n                                label=\"Пол\"  \n                                error={error}\n                            >\n                                {GENDERS.map(item => <MenuItem value={item.value} key={item.value}>{item.text}</MenuItem>)}\n                            </CustomSelect>\n                        )}\n                    />\n                    <Controller\n                        name=\"max_age\"\n                        control={control}\n                        defaultValue=\"\"\n                        rules={{ required: \"Обязательное поле!\" }}\n                        render={({ field: { onChange, value }, fieldState: { error } }) => (\n                            <CustomSelect\n                                onChange={(e) => {\n                                    const newValue = Number(e.target.value)\n                                    setValue('max_age', newValue)\n                                    ages.forEach(el => {\n                                        if(el.value[1] === newValue) {\n                                            setValue('min_age', el.value[0])\n                                        }\n                                    })\n                                }}\n                                value={value}\n                                label=\"Подходит по возрасту\"  \n                                error={error}\n                            >\n                                {ages.map(el => \n                                    el.value[1] > -1 && <MenuItem key={el.text} value={el.value[1]}>{el.text}</MenuItem>\n                                )}\n                            </CustomSelect>\n                        )}\n                    />\n                </Field>\n                <Field className={classes.row}>\n                    <Controller\n                        name=\"material_ua\"\n                        control={control}\n                        defaultValue=\"\"\n                        render={({ field: { onChange, value }, fieldState: { error } }) => (\n                            <AdminInput\n                                onChange={onChange}\n                                value={value}\n                                error={error}\n                                label=\"Материал УКР\"\n                            />\n                        )}\n                    />\n                </Field>\n                <Field className={classes.row}>\n                    <Controller\n                        name=\"size\"\n                        control={control}\n                        defaultValue=\"\"\n                        render={({ field: { onChange, value }, fieldState: { error } }) => (\n                            <AdminInput\n                                onChange={onChange}\n                                value={value}\n                                label=\"Размер (шир. x выс. см)\"\n                                startAdornment={true}\n                                startAdornmentIcon={<GiWeight/>}\n                            />\n                        )}\n                    />\n                    <Controller\n                        name=\"count\"\n                        control={control}\n                        defaultValue=\"\"\n                        rules={{ required: \"Обязательное поле!\" }}\n                        render={({ field: { onChange, value }, fieldState: { error } }) => (\n                            <AdminInput\n                                onChange={onChange}\n                                value={value}\n                                error={error}\n                                regex=\"number\"\n                                label=\"Кол-во на складе\"\n                                startAdornment={true}\n                                startAdornmentIcon={<GrStorage/>}\n                            />\n                        )}\n                    />\n                </Field>\n                <div style={{ marginTop: \"10px\" }}>\n                    <Controller\n                        name=\"category\"\n                        control={control}\n                        defaultValue={null}\n                        rules={{ required: \"Обязательное поле!\" }}\n                        render={({ field: { onChange, value }, fieldState: { error } }) => (\n                            <CustomAutocomplete\n                                value={value}\n                                onChange={onChange}\n                                items={categories}\n                                label=\"Категория\"\n                                error={error}\n                                setValue={setValue}\n                                name={\"category\"}\n                            />\n                        )}\n                    />\n                </div>\n                <div style={{ marginTop: \"20px\" }}>\n                    <Controller\n                        name=\"tags\"\n                        control={control}\n                        defaultValue={[]}\n                        rules={{ required: \"Обязательное поле!\" }}\n                        render={({ field: { onChange, value }, fieldState: { error } }) => (\n                            <CustomAutocomplete\n                                value={value}\n                                onChange={onChange}\n                                items={tags}\n                                multiple={true}\n                                label=\"Теги\"\n                                error={error}\n                                setValue={setValue}\n                                name={\"tags\"}\n                            />\n                        )}\n                    />\n                </div>\n                <div className={classes.footer}>\n                    <Button type='submit'>Обновить</Button>\n                    <Button onClick={handleClose}>Отмена</Button>\n                </div>\n            </form>\n        </Modal>\n    )\n}\n\nexport default AdminEditForm","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"MultipleChangeModal_main__58UUi\",\"type\":\"MultipleChangeModal_type__+NAnP\",\"submit\":\"MultipleChangeModal_submit__nlfbB\"};","import { TextField } from '@mui/material'\nimport { Button } from '@mui/material'\nimport { Autocomplete } from '@mui/material'\nimport { MenuItem } from '@mui/material'\nimport { makeStyles } from '@mui/styles'\nimport React from 'react'\nimport { useEffect } from 'react'\nimport { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { getBrands } from '../../../../Redux/brandsReducer'\nimport { getAllCategoriesForSelect } from '../../../../Redux/categoryReducer'\nimport { getItems, multipleChange } from '../../../../Redux/itemsReducer'\nimport { getTags } from '../../../../Redux/tagsReducer'\nimport useDebounce from '../../../../Utils/debounce'\nimport CustomSelect from '../../../UI/Form/Select'\nimport Modal from '../../../UI/Modal/Modal'\nimport classes from './MultipleChangeModal.module.css'\n\nconst useStyles = makeStyles((theme) => ({\n    root:{\n        background: \"white\",\n        '& label.Mui-focused': {\n            color: '#4B5EA3'\n        },\n        '& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline': {\n            borderColor: '#4B5EA3' \n        },\n        '& .MuiOutlinedInput-root': {\n            borderRadius: 0,\n            borderRadius: \"4px\"\n        },\n        '& .MuiFormHelperText-root.Mui-error': {\n            margin: 0,\n            marginTop: 5,\n        }\n    }\n}));\n\nconst MultipleChangeModal = (props) => {\n    const { \n        onClose, \n        selectedItems,\n        getBrands,\n        getAllCategoriesForSelect,\n        getTags,\n        brands,\n        tags,\n        categories,\n        multipleChange,\n        pageNumber,\n        pageSize,\n        searchGlobalValue,\n        getItems,\n        setSelectedItems\n    } = props\n\n    const [type, setType] = useState(\"brand\")\n    const [value, setValue] = useState(null)\n\n    const [searchValue, setSearchValue] = useState(\"\")\n\n    const debouncedSearchTerm = useDebounce(searchValue, 500);\n\n    const [action, setAction] = useState(\"add\")\n\n    const material = useStyles()\n\n    const onSubmit = () => {\n        if(value) {\n            multipleChange(selectedItems, type, value._id, action).then((status) => {\n                if(status) {\n                    getItems(pageNumber + 1, pageSize, \"\", \"\", searchGlobalValue, false)\n                    setSelectedItems([])\n                }\n            })\n        }\n    }\n\n    useEffect(() => {\n        if(debouncedSearchTerm) {\n            switch(type) {\n                case \"brand\": {\n                    getBrands(1, 1000, \"\", \"\", searchValue, false)\n                    break\n                }\n                case \"category\": {\n                    getAllCategoriesForSelect(1, 1000, \"\", \"\", searchValue, false)\n                }\n                case \"tag\": {\n                    getTags(1, 1000, \"\", \"\", searchValue, false)\n                }\n            }\n        }\n    }, [debouncedSearchTerm, type])\n\n    useEffect(() => {\n        if(searchValue.length === 0) {\n            switch(type) {\n                case \"brand\": {\n                    getBrands(1, 1000, \"\", \"\", \"\", false)\n                    break\n                }\n                case \"category\": {\n                    getAllCategoriesForSelect(1, 1000, \"\", \"\", \"\", false)\n                }\n                case \"tag\": {\n                    getTags(1, 1000, \"\", \"\", \"\", false)\n                }\n            }\n        }\n    }, [searchValue, type])\n\n    return (\n        <Modal title=\"Мультизамена\" onClose={onClose}>\n            <div className={classes.main}>\n                <div className={classes.type}>\n                    <CustomSelect\n                        onChange={e => setType(e.target.value)}\n                        value={type}\n                        label=\"Что заменить\"\n                    >\n                        <MenuItem value={\"brand\"}>{\"Бренд\"}</MenuItem>\n                        <MenuItem value={\"category\"}>{\"Категорию\"}</MenuItem>\n                        <MenuItem value={\"tag\"}>{\"Тэг\"}</MenuItem>\n                    </CustomSelect>\n                </div>\n                {type === \"tag\" && (\n                    <div className={classes.type}>\n                        <CustomSelect\n                            onChange={e => setAction(e.target.value)}\n                            value={action}\n                            label=\"Действие\"\n                        >\n                            <MenuItem value={\"add\"}>{\"Добавить\"}</MenuItem>\n                            <MenuItem value={\"remove\"}>{\"Удалить\"}</MenuItem>\n                        </CustomSelect>\n                    </div>\n                )}\n                <div className={classes.values}>\n                    <Autocomplete\n                        disablePortal\n                        options={\n                            type === \"brand\" && brands ||\n                            type === \"category\" && categories ||\n                            type === \"tag\" && tags\n                        }\n                        value={value}\n                        getOptionLabel={option => option.name_ua ? option.name_ua : option.name}\n                        onChange={(e, newValue) => setValue(newValue)}\n                        onClose={e => setSearchValue(\"\")}\n                        filterSelectedOptions\n                        limitTags={100}\n                        isOptionEqualToValue={(option, value) => option._id === value._id}\n                        style={{ width: \"100%\" }}\n                        defaultValue={null}\n                        renderInput={(params) => (\n                            <TextField \n                                {...params} \n                                classes={material} \n                                label={\n                                    type === \"brand\" && \"Название бренда, на который нужно сменить\" ||\n                                    type === \"category\" && \"Имя категории, на которую нужно сменить\" ||\n                                    type === \"tag\" && \"Имя тега, на который нужно добавить / удалить\"\n                                }\n                                onChange={e => setSearchValue(e.target.value)}     \n                            />\n                        )}\n                />\n                </div>\n                <Button className={classes.submit} disabled={!value} onClick={onSubmit}>Заменить</Button>\n            </div>\n        </Modal>\n    )\n}\n\nlet mapStateToProps = (state) => ({\n    brands: state.brands.brands,\n    categories: state.categories.allCategories,\n    tags: state.tags.tags,\n})\n\nexport default connect(mapStateToProps, {\n    multipleChange,\n    getBrands,\n    getTags,\n    getAllCategoriesForSelect,\n    getItems\n})(MultipleChangeModal)","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"EmptyDescriptionItemsModal_main__z1gnM\",\"header\":\"EmptyDescriptionItemsModal_header__lGjkc\",\"skipButt\":\"EmptyDescriptionItemsModal_skipButt__4YjZw\",\"values\":\"EmptyDescriptionItemsModal_values__G-773\"};","import { Button } from \"@mui/material\"\nimport { connect } from \"react-redux\"\nimport { setItemsWithEmptyDescription } from \"../../../../Redux/itemsReducer\"\nimport Modal from \"../../../UI/Modal/Modal\"\nimport classes from \"./EmptyDescriptionItemsModal.module.css\"\n\nconst EmptyDescriptionItemsModal = (props) => {\n    const {\n        itemsWithEmptyDescription,\n        setItemsWithEmptyDescription,\n        getItemsXml,\n        onEditItemClick\n    } = props\n\n    const handleClose = () => {\n        setItemsWithEmptyDescription([])\n    }\n\n    return (\n        <Modal title=\"XML Каталог\" onClose={handleClose}>\n            <div className={classes.main}>\n                <div className={classes.header}>\n                    <p>\n                        У некоторых товаров отсутствует описание. Вы можете\n                        отредактировать их сейчас, нажав на их название, или\n                        пропустить этот шаг.\n                    </p>\n                    <p>\n                        <strong>Внимание:</strong> товары, у которых нет\n                        описания - не попадут в каталог XML.\n                    </p>\n                </div>\n                <Button\n                    className={classes.skipButt}\n                    onClick={() => getItemsXml(true)}\n                >\n                    Пропустить\n                </Button>\n                <div className={classes.values}>\n                    <label>Товары ({itemsWithEmptyDescription.length} шт.):</label>\n                    {itemsWithEmptyDescription.map((el) => (\n                        <Button key={el._id} onClick={() => onEditItemClick(el)}>\n                            {el.name_ua}\n                        </Button>\n                    ))}\n                </div>\n            </div>\n        </Modal>\n    )\n}\n\nlet mapStateToProps = (state) => ({\n    itemsWithEmptyDescription: state.items.itemsWithEmptyDescription\n})\n\nexport default connect(mapStateToProps, {\n    setItemsWithEmptyDescription\n})(EmptyDescriptionItemsModal)\n","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"ChooseCategoryForXmlModal_main__8R1KS\",\"continueButt\":\"ChooseCategoryForXmlModal_continueButt__AP0j+\"};","import { TextField } from \"@mui/material\"\nimport { Button } from \"@mui/material\"\nimport { Autocomplete } from \"@mui/material\"\nimport { makeStyles } from \"@mui/styles\"\nimport { useState } from \"react\"\nimport { useEffect } from \"react\"\nimport { connect } from \"react-redux\"\nimport { getAllCategoriesForSelect } from \"../../../../Redux/categoryReducer\"\nimport Modal from \"../../../UI/Modal/Modal\"\nimport classes from \"./ChooseCategoryForXmlModal.module.css\"\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        background: \"white\",\n        \"& label.Mui-focused\": {\n            color: \"#4B5EA3\"\n        },\n        \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline\":\n            {\n                borderColor: \"#4B5EA3\"\n            },\n        \"& .MuiOutlinedInput-root\": {\n            borderRadius: 0,\n            borderRadius: \"4px\"\n        },\n        \"& .MuiFormHelperText-root.Mui-error\": {\n            margin: 0,\n            marginTop: 5\n        }\n    }\n}))\n\nconst ChooseCategoryForXmlModal = (props) => {\n    const {\n        onClose,\n        categories,\n        getAllCategoriesForSelect,\n        getItemsXml,\n        setCategoryIdForXml\n    } = props\n\n    const material = useStyles()\n\n    const [value, setValue] = useState({ _id: \"all\", name_ua: \"Все категории\" })\n    const [editedCategories, setEditedCategories] = useState([])\n\n    const handleClose = () => {\n        onClose()\n        setCategoryIdForXml(\"all\")\n    }\n\n    const makeXmlRequest = () => {\n        onClose()\n        getItemsXml(false)\n    }\n\n    const handleValue = (value) => {\n        setValue(value)\n        setCategoryIdForXml(value._id)\n    }\n\n    useEffect(() => {\n        getAllCategoriesForSelect(1, 1000, \"\", \"\", \"\", false)\n    }, [])\n\n    useEffect(() => {\n        if (categories) {\n            setEditedCategories([{ _id: \"all\", name_ua: \"Все категории\" }, ...categories])\n        }\n    }, [categories])\n\n    return (\n        <Modal\n            onClose={handleClose}\n            title=\"Выберите категорию товаров, из которой вы хотите выгрузить XML\"\n        >\n            <div className={classes.main}>\n                <div className={classes.values}>\n                    <Autocomplete\n                        disablePortal\n                        options={editedCategories}\n                        value={value}\n                        getOptionLabel={(option) => option.name_ua}\n                        onChange={((e, value) => handleValue(value))}\n                        filterSelectedOptions\n                        limitTags={1000}\n                        isOptionEqualToValue={(option, value) =>\n                            option._id === value._id\n                        }\n                        style={{ width: \"100%\" }}\n                        defaultValue={null}\n                        renderInput={(params) => (\n                            <TextField\n                                {...params}\n                                classes={material}\n                                label={\"Имя категории\"}\n                            />\n                        )}\n                    />\n                </div>\n                <Button onClick={makeXmlRequest} className={classes.continueButt}>Продолжить</Button>\n            </div>\n        </Modal>\n    )\n}\n\nlet mapStateToProps = (state) => ({\n    categories: state.categories.allCategories\n})\n\nexport default connect(mapStateToProps, {\n    getAllCategoriesForSelect\n})(ChooseCategoryForXmlModal)\n","import React, { useState } from \"react\"\nimport classes from \"../AdminView.module.css\"\nimport {\n    Button,\n    Paper,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TablePagination,\n    TableRow\n} from \"@mui/material\"\nimport AdminControllButtons from \"../../UI/Admin/Table/ControlButtons/AdminControllButtons\"\nimport AdminSearch from \"../../UI/Admin/Table/Search/AdminSearch\"\nimport AdminAddForm from \"./AdminAddForm\"\nimport TableTh from \"../../UI/Admin/Table/TableTh/TableTh\"\nimport AdminDeleteModal from \"../../UI/Admin/AdminDeleteModal/AdminDeleteModal\"\nimport AdminEditForm from \"./AdminEditForm\"\nimport ServerResponse from \"../../UI/ServerResponse/ServerResponse\"\nimport EmptyData from \"../../UI/Admin/EmpyData/EmptyData\"\nimport { priceParser } from \"../../../Utils/priceParser\"\nimport AnimatedBlock from \"../../Animation/AnimatedBlock/AnimatedBlock\"\nimport CustomCheckbox from \"../../UI/Form/Checkbox\"\nimport MultipleChangeModal from \"./MultipleChangeModal/MultipleChangeModal\"\nimport EmptyDescriptionItemsModal from \"./EmptyDescriptionItemsModal/EmptyDescriptionItemsModal\"\nimport ChooseCategoryForXmlModal from \"./ChooseCategoryForXmlModal/ChooseCategoryForXmlModal\"\n\nconst AdminItems = (props) => {\n    const {\n        items,\n        total,\n        brands,\n        categories,\n        tags,\n        pageSize,\n        pageNumber,\n        isOpenAddModal,\n        handleAddModal,\n        handleChangePage,\n        handlePageSize,\n        getItems,\n        searchValue,\n        setSearchValue,\n        createItem,\n        deleteItem,\n        updateItem,\n        serverResponse,\n        serverError,\n        openEdit,\n        handleEdit,\n        currentItem,\n        openRemove,\n        handleRemove,\n        setItemActive,\n        handleSelected,\n        selectedItems,\n        handleOpenMultiple,\n        isOpenMultipleModal,\n        setSelectedItems,\n        getItemsXml,\n        itemsWithEmptyDescription,\n        isOpenCategoryXml,\n        handleOpenCategoryXml,\n        setCategoryIdForXml\n    } = props\n\n    const rows = [\n        {\n            key: \"check\",\n            text: \"\",\n            searchValue: \"\"\n        },\n        {\n            key: \"one\",\n            text: \"\",\n            searchByValue: \"\"\n        },\n        {\n            key: \"name\",\n            text: \"Название\",\n            searchByValue: \"name\"\n        },\n        {\n            key: \"code\",\n            text: \"Код\",\n            searchByValue: \"code\"\n        },\n        {\n            key: \"price\",\n            text: \"Цена\",\n            searchByValue: \"price\"\n        },\n        {\n            key: \"brand\",\n            text: \"Бренд\",\n            searchByValue: \"brand\"\n        },\n        {\n            key: \"category\",\n            text: \"Категория\",\n            searchByValue: \"category\"\n        },\n        {\n            key: \"count\",\n            text: \"Наявность\",\n            searchByValue: \"count\"\n        },\n        {\n            key: \"is_active\",\n            text: \"Активный\",\n            searchValue: \"is_active\"\n        },\n        {\n            key: \"last\",\n            text: \"\",\n            searchByValue: \"\"\n        }\n    ]\n\n    return (\n        <AnimatedBlock className={classes.main}>\n            {(serverError || serverResponse) && <ServerResponse />}\n            {itemsWithEmptyDescription.length > 0 && (\n                <EmptyDescriptionItemsModal\n                    getItemsXml={getItemsXml}\n                    onEditItemClick={handleEdit}\n                />\n            )}\n            {isOpenCategoryXml && (\n                <ChooseCategoryForXmlModal\n                    onClose={handleOpenCategoryXml}\n                    getItemsXml={getItemsXml}\n                    setCategoryIdForXml={setCategoryIdForXml}\n                />\n            )}\n            {isOpenAddModal && (\n                <AdminAddForm\n                    onClose={handleAddModal}\n                    brands={brands}\n                    categories={categories}\n                    tags={tags}\n                    createItem={createItem}\n                />\n            )}\n            {openEdit && (\n                <AdminEditForm\n                    onClose={handleEdit}\n                    onEdit={handleEdit}\n                    brands={brands}\n                    editItem={updateItem}\n                    categories={categories}\n                    tags={tags}\n                    item={currentItem}\n                />\n            )}\n            {openRemove && (\n                <AdminDeleteModal\n                    onRemove={handleRemove}\n                    item={currentItem}\n                    deleteItem={deleteItem}\n                    onClose={handleRemove}\n                />\n            )}\n            {isOpenMultipleModal && (\n                <MultipleChangeModal\n                    onClose={handleOpenMultiple}\n                    selectedItems={selectedItems}\n                    pageNumber={pageNumber}\n                    pageSize={pageSize}\n                    searchGlobalValue={searchValue}\n                    setSelectedItems={setSelectedItems}\n                />\n            )}\n            <div className={classes.header}>\n                <h2>Товары</h2>\n                <div className={classes.topController}>\n                    <Button\n                        className={classes.xmlButt}\n                        onClick={handleOpenCategoryXml}\n                    >\n                        Выгрузить XML файл с товарами\n                    </Button>\n                    <AdminSearch\n                        onSearch={getItems}\n                        pageSize={pageSize}\n                        setSearchValue={setSearchValue}\n                        searchValue={searchValue}\n                    />\n                    <Button\n                        onClick={handleOpenMultiple}\n                        className={classes.multiButt}\n                        disabled={selectedItems.length < 1}\n                    >\n                        Мультизамена\n                    </Button>\n                    <Button onClick={handleAddModal} className={classes.addBut}>\n                        Добавить +\n                    </Button>\n                </div>\n            </div>\n            <div className={classes.table}>\n                <TableContainer\n                    component={Paper}\n                    className={classes.tableContainer}\n                >\n                    <Table>\n                        <TableHead>\n                            <TableRow>\n                                {rows.map((item, index) => (\n                                    <TableTh\n                                        text={item.text}\n                                        onSort={getItems}\n                                        searchByValue={item.searchByValue}\n                                        searchValue={searchValue}\n                                        pageNumber={pageNumber}\n                                        pageSize={pageSize}\n                                        key={item.key}\n                                        align={index === 0 ? \"center\" : \"left\"}\n                                        padding={index === 0 ? 0 : \"inherit\"}\n                                    />\n                                ))}\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {items.map((item) => (\n                                <TableRow key={item._id}>\n                                    <TableCell\n                                        width={\"50px\"}\n                                        align={\"center\"}\n                                        className={classes.checkCell}\n                                    >\n                                        <CustomCheckbox\n                                            onChange={() =>\n                                                handleSelected(item._id)\n                                            }\n                                        />\n                                    </TableCell>\n                                    <TableCell width={70}>\n                                        <img\n                                            src={item.images[0]}\n                                            alt=\"image\"\n                                            className={classes.imgPreview}\n                                            referrerpolicy=\"no-referrer\"\n                                        />\n                                    </TableCell>\n                                    <TableCell width={\"12%\"}>\n                                        {item.name_ua}\n                                    </TableCell>\n                                    <TableCell align=\"center\">\n                                        {item.code}\n                                    </TableCell>\n                                    <TableCell>\n                                        {priceParser(item.price)} грн.\n                                    </TableCell>\n                                    <TableCell>\n                                        {item.brand && item.brand.name}\n                                    </TableCell>\n                                    <TableCell>\n                                        {item.category && item.category.name_ua}\n                                    </TableCell>\n                                    <TableCell align=\"center\">\n                                        {item.count > 0\n                                            ? item.count + \" шт.\"\n                                            : \"Нет в наличии\"}\n                                    </TableCell>\n                                    <TableCell align=\"center\">\n                                        <CustomCheckbox\n                                            checked={item.is_active}\n                                            onChange={() =>\n                                                setItemActive(item._id)\n                                            }\n                                        />\n                                    </TableCell>\n                                    <TableCell width={50} align=\"right\">\n                                        <AdminControllButtons\n                                            item={item}\n                                            onRemove={handleRemove}\n                                            onEdit={handleEdit}\n                                            direction=\"column\"\n                                        />\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                {items.length === 0 && <EmptyData />}\n                <TablePagination\n                    rowsPerPageOptions={[5, 10, 20, 50]}\n                    component={\"div\"}\n                    rowsPerPage={pageSize}\n                    page={pageNumber}\n                    count={total}\n                    onPageChange={handleChangePage}\n                    onRowsPerPageChange={handlePageSize}\n                />\n            </div>\n        </AnimatedBlock>\n    )\n}\n\nexport default AdminItems\n","import React, { useEffect } from 'react'\nimport { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { host } from '../../../Api/api';\nimport { getBrands } from '../../../Redux/brandsReducer';\nimport { getAllCategories } from '../../../Redux/categoryReducer';\nimport { getItemsXml } from '../../../Redux/commonReducer';\nimport { createItem, deleteItem, getItems, setItemActive, setItemsData, setItemsWithEmptyDescription, setNewItem, updateItem } from '../../../Redux/itemsReducer';\nimport { getTags } from '../../../Redux/tagsReducer';\nimport Preloader from '../../Common/Preloader/Preloader';\nimport AdminLayout from '../../UI/Admin/AdminLayout/AdminLayout'\nimport AdminItems from './AdminItems'\n\nconst AdminItemsContainer = (props) => {\n    const { \n        isFetching,\n        items, \n        total,\n        brands, \n        categories,\n        tags,\n        getItems, \n        getBrands, \n        getAllCategories,\n        getTags,\n        createItem,\n        deleteItem,\n        updateItem,\n        serverError,\n        serverResponse,\n        setItemsData,\n        newItem,\n        setItemActive,\n        getItemsXml,\n        itemsWithEmptyDescription,\n        setItemsWithEmptyDescription\n    } = props\n\n    const [pageSize, setPageSize] = useState(20)\n    const [pageNumber, setPageNumber] = useState(0)\n\n    const [searchValue, setSearchValue] = useState(\"\")\n\n    const [isOpenAddModal, setIsOpenAddModal] = useState(false)\n    const [openEdit, setOpenEdit] = useState(false)\n    const [openRemove, setOpenRemove] = useState(false)\n\n    const [isOpenCategoryXml, setIsOpenCategoryXml] = useState(false)\n    const [categoryIdForXml, setCategoryIdForXml] = useState(\"all\")\n\n    const [currentItem, setCurrentItem] = useState(null)\n\n    const [selectedItems, setSelectedItems] = useState([])\n\n    const [isOpenMultipleModal, setIsOpenMultipleModal] = useState(false)\n\n    const handleOpenMultiple = () => {\n        setIsOpenMultipleModal(!isOpenMultipleModal)\n    }\n\n    const handleSelected = (item) => {\n        const newSelectedItems = [...selectedItems]\n        let isExist = false\n        newSelectedItems.forEach((el, index) => {\n            if(el === item) {\n                newSelectedItems.splice(index, 1)\n                isExist = true\n            }\n        })\n        if(!isExist) {\n            newSelectedItems.push(item)\n        }\n        setSelectedItems(newSelectedItems)\n    }\n\n    const handleEdit = (item) => {\n        setCurrentItem(item)\n        setOpenEdit(!openEdit)\n    }\n\n    const handleRemove = (item) => {\n        setCurrentItem(item)\n        setOpenRemove(!openRemove)\n    }\n\n    const handleAddModal = () => {\n        setIsOpenAddModal(!isOpenAddModal)\n    }\n\n    const handleOpenCategoryXml = () => {\n        setIsOpenCategoryXml(!isOpenCategoryXml)\n    }\n\n    const handleChangePage = (event, page) => {\n        setPageNumber(page)\n    }\n\n    const handlePageSize = (event) => {\n        setPageSize(event.target.value)\n        setPageNumber(0)\n    }\n\n    const handleAddItem = async (data) => {\n        await createItem(data)\n    }\n\n    const handleEditItem = async (itemId, data) => {\n        await updateItem(itemId, data)\n    }\n\n    const handleDeleteItem = (itemId) => {\n        deleteItem(itemId).then((status) => {\n            if(status) {\n                const newItems = [...items]\n                newItems.forEach((item, index) => {\n                    if(item._id === itemId) {\n                        newItems.splice(index, 1)\n                    }\n                })\n                setOpenRemove(false)\n                setItemsData(newItems)\n            }\n        })\n    }\n\n    const getItemsXmlHandler = (skipEmpty) => {\n        getItemsXml(skipEmpty, categoryIdForXml).then(response => {\n            if (response) {\n                let a = document.createElement(\"a\")\n                a.href = `${host}/public/product_feed.zip`\n                a.download = \"product_feed.zip\"\n                a.target = \"_blank\"\n                a.click()\n                setItemsWithEmptyDescription([])\n            }\n        })\n    }\n\n    useEffect(() => {\n        if(newItem){\n            const newItems = [...items]\n            let pushIndex = newItems.length\n            newItems.forEach((item, index) => {\n                if(item._id === newItem._id) {\n                    newItems.splice(index, 1)\n                    pushIndex = index\n                }\n            })\n            newItems.splice(pushIndex, 0, newItem)\n            setItemsData(newItems)\n\n            if (itemsWithEmptyDescription.length > 0) {\n                const newEmptyItems = [...itemsWithEmptyDescription]\n                newEmptyItems.forEach((item, index) => {\n                    if(item._id === newItem._id) {\n                        newEmptyItems.splice(index, 1)\n                    }\n                })\n                setItemsWithEmptyDescription(newEmptyItems)\n            }\n\n            setNewItem(null)\n        }\n    }, [newItem])\n\n    useEffect(() => {\n        getItems(pageNumber + 1, pageSize, \"\", \"\", \"\", false)\n        getBrands(1, 1000, \"\", \"\", \"\")\n        getAllCategories(1, 1000, \"\", \"\", \"\")\n        getTags(1, 1000, \"\", \"\", \"\")\n    }, [newItem, pageSize, pageNumber])\n\n    useEffect(() => {\n        if(serverResponse){\n            setIsOpenAddModal(false)\n        }\n    }, [serverResponse])\n\n    return (\n        <AdminLayout>\n            {isFetching && <Preloader/> }\n            <AdminItems\n                items={items}\n                total={total}\n                brands={brands}\n                categories={categories}\n                tags={tags}\n                pageSize={pageSize}\n                pageNumber={pageNumber}\n                isOpenAddModal={isOpenAddModal}\n                handleAddModal={handleAddModal}\n                handleChangePage={handleChangePage}\n                handlePageSize={handlePageSize}\n                handleRemove={handleRemove}\n                handleEdit={handleEdit}\n                openEdit={openEdit}\n                openRemove={openRemove}\n                currentItem={currentItem}\n                getItems={getItems}\n                searchValue={searchValue}\n                setSearchValue={setSearchValue}\n                createItem={handleAddItem}\n                deleteItem={handleDeleteItem}\n                editItem={handleEditItem}\n                serverResponse={serverResponse}\n                serverError={serverError}\n                updateItem={updateItem}\n                setItemActive={setItemActive}\n                handleSelected={handleSelected}\n                selectedItems={selectedItems}\n                handleOpenMultiple={handleOpenMultiple}\n                isOpenMultipleModal={isOpenMultipleModal}\n                setSelectedItems={setSelectedItems}\n                getItemsXml={getItemsXmlHandler}\n                itemsWithEmptyDescription={itemsWithEmptyDescription}\n                isOpenCategoryXml={isOpenCategoryXml}\n                handleOpenCategoryXml={handleOpenCategoryXml}\n                setCategoryIdForXml={setCategoryIdForXml}\n            />\n        </AdminLayout>\n    )\n}\n\nlet mapStateToProps = (state) => ({\n    isFetching: state.common.isFetching,\n    items: state.items.items,\n    total: state.items.total,\n    brands: state.brands.brands,\n    categories: state.categories.categories,\n    tags: state.tags.tags,\n    serverResponse: state.common.serverResponse,\n    serverError: state.common.serverError,\n    newItem: state.items.newItem,\n    itemsWithEmptyDescription: state.items.itemsWithEmptyDescription\n})\n\nexport default connect(mapStateToProps, {\n    getItems,\n    getBrands,\n    getAllCategories,\n    getTags,\n    createItem,\n    deleteItem,\n    updateItem,\n    setItemsData,\n    setNewItem,\n    setItemActive,\n    getItemsXml,\n    setItemsWithEmptyDescription\n})(AdminItemsContainer)","import React from 'react'\nimport Autocomplete from '@mui/material/Autocomplete';\nimport { TextField } from '@mui/material'\nimport { makeStyles } from '@mui/styles'\n\nconst useStyles = makeStyles((theme) => ({\n    root:{\n        background: \"white\",\n        '& label.Mui-focused': {\n            color: '#4B5EA3'\n        },\n        '& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline': {\n            borderColor: '#4B5EA3' \n        },\n        '& .MuiOutlinedInput-root': {\n            borderRadius: 0,\n            borderRadius: \"4px\"\n        },\n        '& .MuiFormHelperText-root.Mui-error': {\n            margin: 0,\n            marginTop: 5,\n        }\n    }\n}));\n\nconst CustomAutocomplete = (props) => {\n    const { items, onChange, label, multiple = false, error, setValue, name, value, defaultValue = null } = props\n\n    const material = useStyles()\n\n    return (\n        <Autocomplete\n            disablePortal\n            options={items}\n            value={value}\n            getOptionLabel={option => option.name_ua ? option.name_ua : option.name}\n            onChange={(event, newValue) => {\n                setValue(name, newValue)\n            }}\n            multiple={multiple}\n            filterSelectedOptions\n            limitTags={10}\n            isOptionEqualToValue={(option, value) => option._id === value._id}\n            style={{ width: \"100%\" }}\n            defaultValue={defaultValue}\n            renderInput={(params) => <TextField {...params} classes={material} label={label} error={!!error} helperText={error ? error.message : null} />}\n        />\n    )\n}\n\nexport default CustomAutocomplete","import React from 'react'\nimport { Checkbox } from '@mui/material';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport { makeStyles } from '@mui/styles'\n\nconst useStyles = makeStyles((theme) => ({\n    root:{\n        color: \"#677bc5\",\n        '&.Mui-checked': {\n            color: \"#4B5EA3 !important\"\n        }\n    }\n}));\n\nconst CustomCheckbox = (props) => {\n    const material = useStyles()\n\n    const {\n        label = \"\",\n        checked,\n        onChange,\n        size = \"medium\",\n        disabled = false\n    } = props\n\n    return (\n        <FormControlLabel\n            style={{ margin: 0 }}\n            control={\n                <Checkbox \n                    checked={checked}\n                    classes={material}\n                    onChange={onChange}\n                    size={size}\n                    disabled={disabled}\n                />\n            } \n            label={label}\n        />\n    )\n}\n\nexport default CustomCheckbox","import { TextField } from '@mui/material'\nimport React from 'react'\nimport { makeStyles } from '@mui/styles'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& .MuiMenuItem-root .MuiMenuItem-gutters .MuiButtonBase-root': {\n            display: \"flex !important\",\n        },\n        '& .MuiMenuItem-root': {\n            display: \"flex\"\n        },\n        '& label.Mui-focused': {\n            color: '#4B5EA3'\n        },\n        '& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline': {\n            borderColor: '#4B5EA3' \n        },\n        '& .MuiOutlinedInput-root': {\n            borderRadius: 0,\n            borderRadius: \"4px\",\n            backgroundColor: \"white\"\n        },\n        '& .MuiFormHelperText-root.Mui-error': {\n            margin: 0,\n            marginTop: 5,\n        },\n        '& .MuiList-root .MuiList-padding .MuiMenu-list': {\n            display: \"flex\",\n            flexDirection: \"column\"\n        }\n    }\n}));\n\nconst CustomSelect = (props) => {\n    const { \n        value, \n        onChange, \n        label, \n        error, \n        children, \n        variant = \"outlined\",\n    } = props\n\n    const material = useStyles()\n\n    return (\n        <TextField\n            value={value}\n            label={label}\n            autoComplete=\"off\"\n            error={!!error}\n            variant={variant}\n            helperText={error ? error.message : null}\n            onChange={onChange}\n            select  \n            classes={material}\n        >\n            {children}\n        </TextField>\n    )\n}\n\nexport default CustomSelect\n","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"ServerResponse_main__uVUyS\",\"fade\":\"ServerResponse_fade__xbMji\",\"head\":\"ServerResponse_head__b1YVa\",\"error\":\"ServerResponse_error__S72kH\",\"good\":\"ServerResponse_good__Y6wpx\"};","import React, { useEffect } from 'react'\nimport classes from './ServerResponse.module.css'\nimport { IconButton } from '@mui/material'\nimport { AiOutlineClose } from 'react-icons/ai';\nimport { connect } from 'react-redux';\nimport { setServerError, setServerResponse } from '../../../Redux/commonReducer';\nimport { cx } from '../../../Utils/classnames';\n\nimport Aos from 'aos'\nimport 'aos/dist/aos.css'\n\nconst ServerResponse = (props) => {\n    const {\n        setServerError,\n        setServerResponse,\n        serverError,\n        serverResponse\n    } = props\n\n    const handleServerError = () => {\n        setServerError(null)\n    }\n    const handleServerResponse = () => {\n        setServerResponse(null)\n    }\n\n    const onClose = () => {\n        handleServerError()\n        handleServerResponse()\n    }\n\n    useEffect(() => {\n        const timer = setTimeout(() => {\n            onClose()\n        }, 3000);\n        return () => clearTimeout(timer);\n    }, [])\n\n    useEffect(() => {\n        Aos.init({duration: 1000})\n    }, [])\n\n    return (\n        <div \n            className={cx(\n                classes.main, \n                serverError ? classes.error : \"\", \n                serverResponse ? classes.good : \"\"\n            )}\n        >\n            <div className={classes.head}>\n                <IconButton onClick={onClose}>\n                    <AiOutlineClose/>\n                </IconButton>\n            </div>\n            <div className={classes.body}>\n                {serverResponse && <p>{serverResponse}</p>}\n                {serverError && <p>{serverError}</p>}\n            </div>\n        </div>\n    )\n}\n\nlet mapStateToProps = (state) => ({\n    serverResponse: state.common.serverResponse,\n    serverError: state.common.serverError\n})\n\nexport default connect(mapStateToProps, {\n    setServerError,\n    setServerResponse\n})(ServerResponse)","import { useTranslation } from \"react-i18next\"\n\nexport const useChildAge = () => {\n    const { t } = useTranslation()\n\n    const items = [\n        {\n            value: [-1, -1],\n            text: t(\"selector.ages.none\")\n        },\n        {\n            value: [0, 0],\n            text: t(\"selector.ages.0\")\n        },\n        {\n            value: [1, 2],\n            text: t(\"selector.ages.1\")\n        },\n        {\n            value: [3, 5],\n            text: t(\"selector.ages.2\")\n        },\n        {\n            value: [6, 9],\n            text: t(\"selector.ages.3\")\n        },\n        {\n            value: [10, 12],\n            text: t(\"selector.ages.4\")\n        },\n        {\n            value: [13, 17],\n            text: t(\"selector.ages.5\")\n        }\n    ]\n\n    return items\n}"],"names":["props","onClose","brands","categories","tags","createItem","useForm","handleSubmit","control","setValue","reset","ages","useChildAge","Modal","title","className","classes","onSubmit","data","brand","_id","category","map","item","console","log","Field","name","defaultValue","rules","required","value","message","pattern","render","field","onChange","error","fieldState","AdminInput","label","startAdornment","startAdornmentIcon","regex","multiline","rows","DropZone","multiple","initialFiles","placeholder","items","GENDERS","MenuItem","text","e","newValue","Number","target","forEach","el","style","marginTop","Button","type","editItem","useEffect","name_ua","articule","code","price","cost_price","description_ua","images","video_link","country","country_ua","min_age","max_age","gender","material","material_ua","size","count","handleClose","onClick","useStyles","makeStyles","theme","root","background","color","borderColor","borderRadius","margin","connect","state","allCategories","multipleChange","getBrands","getTags","getAllCategoriesForSelect","getItems","selectedItems","pageNumber","pageSize","searchGlobalValue","setSelectedItems","useState","setType","searchValue","setSearchValue","debouncedSearchTerm","useDebounce","action","setAction","length","disablePortal","options","getOptionLabel","option","filterSelectedOptions","limitTags","isOptionEqualToValue","width","renderInput","params","TextField","disabled","then","status","itemsWithEmptyDescription","setItemsWithEmptyDescription","getItemsXml","onEditItemClick","setCategoryIdForXml","editedCategories","setEditedCategories","handleValue","total","isOpenAddModal","handleAddModal","handleChangePage","handlePageSize","deleteItem","updateItem","serverResponse","serverError","openEdit","handleEdit","currentItem","openRemove","handleRemove","setItemActive","handleSelected","handleOpenMultiple","isOpenMultipleModal","isOpenCategoryXml","handleOpenCategoryXml","AnimatedBlock","ServerResponse","onEdit","AdminDeleteModal","onRemove","AdminSearch","onSearch","TableContainer","component","Paper","Table","TableHead","TableRow","key","searchByValue","index","TableTh","onSort","align","padding","TableBody","TableCell","src","alt","referrerpolicy","priceParser","checked","is_active","AdminControllButtons","direction","EmptyData","TablePagination","rowsPerPageOptions","rowsPerPage","page","onPageChange","onRowsPerPageChange","isFetching","common","newItem","getAllCategories","setItemsData","setNewItem","setPageSize","setPageNumber","setIsOpenAddModal","setOpenEdit","setOpenRemove","setIsOpenCategoryXml","categoryIdForXml","setCurrentItem","setIsOpenMultipleModal","handleAddItem","handleEditItem","itemId","newItems","pushIndex","splice","newEmptyItems","AdminLayout","Preloader","event","newSelectedItems","isExist","push","skipEmpty","response","a","document","createElement","href","host","download","click","helperText","display","flexDirection","children","variant","autoComplete","select","setServerError","setServerResponse","timer","setTimeout","clearTimeout","Aos","duration","cx","IconButton","t","useTranslation"],"sourceRoot":""}