{"version":3,"file":"static/js/369.510f953f.chunk.js","mappings":"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","sources":["webpack://front/./src/Components/Common/Breadcrumbs/Breadcrumbs.module.css?f8ff","Components/Common/Breadcrumbs/Breadcrumbs.jsx","webpack://front/./src/Components/Common/News/Post/PostTypeOne/PostTypeOne.module.css?0c15","Components/Common/News/Post/PostTypeOne/PostTypeOne.jsx","webpack://front/./src/Components/Common/News/Post/PostTypeTwo/PostTypeTwo.module.css?a448","Components/Common/News/Post/PostTypeTwo/PostTypeTwo.jsx","webpack://front/./src/Pages/News/Post/Post.module.css?66f9","Pages/News/Post/Post.jsx","Pages/News/Post/PostContainer.jsx","webpack://front/./src/Pages/NotFound/NotFound.module.css?7513","Pages/NotFound/NofFound.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"main\":\"Breadcrumbs_main__Pfxmq\",\"block\":\"Breadcrumbs_block__esy2n\"};","import React from 'react'\nimport { useTranslation } from 'react-i18next'\nimport { connect } from 'react-redux'\nimport { NavLink } from 'react-router-dom'\nimport classes from './Breadcrumbs.module.css'\n\nconst Breadcrumbs = (props) => {\n    const { currentlanguage, active, items } = props\n\n    const { t } = useTranslation()\n\n    // console.log(active, items)\n\n    return (\n        <div className={classes.main}>\n            <div className={classes.block}>\n                <NavLink to=\"/\">{t(\"navigation.breadcrumbMain\")}</NavLink>\n                <span>&gt;</span>\n            </div>\n            {items && items.map(el => (\n                <div className={classes.block} key={el.href}>\n                    <NavLink to={el.href}>{el.title}</NavLink>\n                    <span>&gt;</span>\n                </div>\n            ))}\n            <p>{active}</p>\n        </div>\n    )\n}\n\nlet mapStateToProps = (state) => ({\n    currentlanguage: state.common.currentlanguage\n})\n\nexport default connect(mapStateToProps, null)(Breadcrumbs)","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"PostTypeOne_main__C+y2+\",\"header\":\"PostTypeOne_header__CFr6l\",\"date\":\"PostTypeOne_date__75qKQ\",\"block\":\"PostTypeOne_block__S7TdM\",\"imageBlock\":\"PostTypeOne_imageBlock__XxSnC\",\"blockText\":\"PostTypeOne_blockText__d5yHY\",\"text\":\"PostTypeOne_text__ISpOu\"};","import React from 'react'\nimport classes from './PostTypeOne.module.css'\nimport { BsCalendar } from 'react-icons/bs';\nimport moment from 'moment'\nimport { cx } from '../../../../../Utils/classnames'\nimport AnimatedBlock from '../../../../Animation/AnimatedBlock/AnimatedBlock';\n\nconst PostTypeOne = (props) => {\n    const { post, currentLanguage } = props\n\n    return (\n        <AnimatedBlock className={classes.main}>\n            <div className={classes.header}>\n                <h4>{currentLanguage === \"ru\" ? post.title : post.title_ua}</h4>\n                <div className={classes.date}>\n                    <BsCalendar/>\n                    <span>{moment(post.created_at).format(\"DD/MM/YYYY\")}</span>\n                </div>\n            </div>\n            {post.images.map((el, index) => (\n                <div className={cx(classes.block)}>\n                    <div className={classes.imageBlock}>\n                        <img src={el} alt=\"image\"/>\n                    </div>\n                    <div className={classes.blockText}>\n                        {currentLanguage === \"ru\" &&\n                            post.paragraphs[index].split(\"\\n\").map(item => (\n                                <p className={classes.text}>{item}</p>\n                            ))\n                        }\n                        {currentLanguage === \"ua\" &&\n                            post.paragraphs_ua[index].split(\"\\n\").map(item => (\n                                <p className={classes.text}>{item}</p>\n                            ))\n                        }\n                    </div>\n                </div>\n            ))}\n        </AnimatedBlock>\n    )\n}\n\nexport default PostTypeOne","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"PostTypeTwo_main__m+S1f\",\"header\":\"PostTypeTwo_header__eMyh3\",\"date\":\"PostTypeTwo_date__VSP-0\",\"block\":\"PostTypeTwo_block__w9Nxi\",\"notEven\":\"PostTypeTwo_notEven__0xbtk\",\"imageBlock\":\"PostTypeTwo_imageBlock__22HM-\",\"blockText\":\"PostTypeTwo_blockText__aYXI-\",\"text\":\"PostTypeTwo_text__LgeQ4\"};","import React from 'react'\nimport { cx } from '../../../../../Utils/classnames'\nimport classes from './PostTypeTwo.module.css'\nimport { BsCalendar } from 'react-icons/bs';\nimport moment from 'moment'\nimport AnimatedBlock from '../../../../Animation/AnimatedBlock/AnimatedBlock';\n\nconst PostTypeTwo = (props) => {\n    const { post, currentLanguage } = props\n\n    return (\n        <AnimatedBlock className={classes.main}>\n            <div className={classes.header}>\n                <h4>{currentLanguage === \"ru\" ? post.title : post.title_ua}</h4>\n                <div className={classes.date}>\n                    <BsCalendar/>\n                    <span>{moment(post.created_at).format(\"DD/MM/YYYY\")}</span>\n                </div>\n            </div>\n            {post.images.map((el, index) => (\n                <div className={cx(classes.block, index / 2 === 0 ? \"\" : classes.notEven)}>\n                    <div className={classes.imageBlock}>\n                        <img src={el} alt=\"image\"/>\n                    </div>\n                    <div className={classes.blockText}>\n                        {currentLanguage === \"ru\" &&\n                            post.paragraphs[index].split(\"\\n\").map(item => (\n                                <p className={classes.text}>{item}</p>\n                            ))\n                        }\n                        {currentLanguage === \"ua\" &&\n                            post.paragraphs_ua[index].split(\"\\n\").map(item => (\n                                <p className={classes.text}>{item}</p>\n                            ))\n                        }\n                    </div>\n                </div>\n            ))}\n        </AnimatedBlock>\n    )\n}\n\nexport default PostTypeTwo","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"Post_main__5WanZ\"};","import React from 'react'\nimport { Helmet } from 'react-helmet'\nimport { useTranslation } from 'react-i18next'\nimport Breadcrumbs from '../../../Components/Common/Breadcrumbs/Breadcrumbs'\nimport PostTypeOne from '../../../Components/Common/News/Post/PostTypeOne/PostTypeOne'\nimport PostTypeTwo from '../../../Components/Common/News/Post/PostTypeTwo/PostTypeTwo'\nimport MaxWidthContainer from '../../../Components/UI/Container/MaxWidthContainer/MaxWidthContainer'\nimport PaddingContainer from '../../../Components/UI/Container/PaddingContainer/PaddingContainer'\nimport classes from './Post.module.css'\n\nconst Post = (props) => {\n    const { post, currentLanguage } = props\n\n    const { t } = useTranslation()\n\n    const breadcrumbsItems = [{\n        href: '/blog',\n        title: t(\"news.title\")\n    }]\n\n    const active = currentLanguage === \"ru\" ? post.title : post.title_ua\n\n    return (\n        <PaddingContainer className={classes.main}>\n            <MaxWidthContainer className={classes.container}>\n                <Helmet \n                    htmlAttributes={{\"lang\": \"ua\", \"amp\": undefined}}\n                    title={`${t(\"siteName\")} | ${active}`}\n                    meta={[{\"name\": \"description\", \"content\": t(\"siteDescription\")}]}\n                />\n                <Breadcrumbs items={breadcrumbsItems} active={active}/>\n                {post.type === 1 && <PostTypeOne post={post} currentLanguage={currentLanguage}/>}\n                {post.type === 2 && <PostTypeTwo post={post} currentLanguage={currentLanguage}/>}\n            </MaxWidthContainer>\n        </PaddingContainer>\n    )\n}\n\nexport default Post","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { useParams } from 'react-router-dom'\nimport Preloader from '../../../Components/Common/Preloader/Preloader'\nimport { getPost, setCurrentPost } from '../../../Redux/newsReducer'\nimport NotFound from '../../NotFound/NofFound'\nimport Post from './Post'\n\nconst PostContainer = (props) => {\n    const { \n        isFetching,\n        getPost,\n        currentPost,\n        currentLanguage,\n        setCurrentPost\n    } = props\n\n    const { title } = useParams()\n\n    useEffect(() => {\n        getPost(title)\n    }, [])\n\n    useEffect(() => {\n        return () => {\n            setCurrentPost({})\n        }\n    }, [])\n\n    return (\n        <>\n            {isFetching && <Preloader/>}\n                <>\n                    {/* {!currentPost ? <NotFound/> : */}\n                        <Post \n                            post={currentPost}\n                            currentLanguage={currentLanguage}\n                        />\n                    \n                </>\n            \n        </>\n    )\n}\n\nlet mapStateToProps = (state) => ({\n    isFetching: state.common.isFetching,\n    currentPost: state.news.currentPost,\n    currentLanguage: state.common.currentLanguage\n})\n\nexport default connect(mapStateToProps, {\n    getPost,\n    setCurrentPost\n})(PostContainer)","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"NotFound_container__nL+3x\"};","import React from 'react'\nimport classes from './NotFound.module.css'\nimport not_found from '../../Assets/error404.png'\nimport PaddingContainer from '../../Components/UI/Container/PaddingContainer/PaddingContainer'\nimport MaxWidthContainer from '../../Components/UI/Container/MaxWidthContainer/MaxWidthContainer'\nimport { useTranslation } from 'react-i18next'\nimport { NavLink } from 'react-router-dom'\nimport { Helmet } from 'react-helmet'\n\nimport Aos from 'aos'\nimport 'aos/dist/aos.css'\n\nconst NotFound = () => {\n    const { t } = useTranslation()\n\n    return (\n       <PaddingContainer>\n           <MaxWidthContainer className={classes.container}>\n                <Helmet \n                    htmlAttributes={{\"lang\": \"ua\", \"amp\": undefined}}\n                    title={`${t(\"siteName\")} | ${t(\"notFound.title\")}`}\n                    meta={[{\"name\": \"description\", \"content\": t(\"siteDescription\")}]}\n                />\n               <h4 data-aos=\"fade-down\" data-aos-duration=\"500\">{t(\"notFound.title\")}...</h4>\n               <NavLink to=\"/\">{t(\"notFound.link\")}</NavLink>\n               <img src={not_found} alt=\"not found\" data-aos=\"zoom-in\" data-aos-duration=\"700\"/>\n           </MaxWidthContainer>\n       </PaddingContainer>\n    )\n}\n\nexport default NotFound"],"names":["connect","state","currentlanguage","common","props","active","items","t","useTranslation","className","classes","to","map","el","href","title","post","currentLanguage","AnimatedBlock","title_ua","moment","created_at","format","images","index","cx","src","alt","paragraphs","split","item","paragraphs_ua","breadcrumbsItems","PaddingContainer","MaxWidthContainer","Helmet","htmlAttributes","undefined","meta","Breadcrumbs","type","isFetching","currentPost","news","getPost","setCurrentPost","useParams","useEffect","Preloader","not_found"],"sourceRoot":""}